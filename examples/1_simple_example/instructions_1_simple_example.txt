Let's create a YAML-file with the correct run configurations first. To keep things organized, we can store the YAML-file in the `1_simple_example`-folder:
```
python3 bonsai/create_config_file.py \
--new_yaml_path examples/1_simple_example/new_yaml.yaml \
--dataset simulated_binary_6_gens_samplingNoise \
--verbose True \
--data_folder examples/1_simple_example/example_data/simulated_binary_6_gens_samplingNoise/ \
--results_folder examples/1_simple_example/results/simulated_binary_6_gens_samplingNoise/ \
--filenames_data delta.txt,d_delta.txt \
--input_is_sanity_output True \
--zscore_cutoff 1.0 \
--UB_ellipsoid_size 1.0 --use_knn 10 \
--skip_greedy_merging False --skip_redo_starry False --skip_opt_times False --skip_nnn_reordering False \
--nnn_n_randommoves 1000 --nnn_n_randomtrees 2 \
--pickup_intermediate False
```
You can open the YAML-file and see how the parameters are set. Also, please read the extensive comments to familiarize yourself with what the different options do.
We can now move to running *Bonsai*:
```
python3 bonsai/bonsai_main.py --config_filepath examples/1_simple_example/new_yaml.yaml --step all
```
This can take a few minutes, note that most time is spend on creating 2 trees by performing 1000 random tree moves. For larger datasets, these are reasonable numbers, for this small tree, 1000 random tree moves will not have a large effect.
Results will be stored in the indicated results_folder: `examples/1_simple_example/results/simulated_binary_6_gens_samplingNoise/`. If the *Bonsai*-run fully completed, there will be a directory called `final_bonsai_zscore1.0`. You can view the results there.
We will now visualize the tree with some cell-annotation. For this, we already provide an annotation-file at `examples/1_simple_example/example_data/simulated_binary_6_gens_samplingNoise/celltype_annotation.csv`. Since this simulated dataset is a binary tree, we annotated the cells by their clade at different heights of the tree. 
Now run the preprocessing of the visualization:
```
python3 bonsai_scout/bonsai_scout_preprocess.py \
--results_folder examples/1_simple_example/results/simulated_binary_6_gens_samplingNoise/ \
--annotation_path examples/1_simple_example/example_data/simulated_binary_6_gens_samplingNoise/celltype_annotation.csv \
--take_all_genes False \
--config_filepath ''
```
Finally, run the following command to start the Shiny-app:
```
python3 bonsai_scout/run_bonsai_scout.py \
--results_folder examples/1_simple_example/results/simulated_binary_6_gens_samplingNoise/ \
--settings_filename bonsai_vis_settings.json
```
Your terminal should now report a link `INFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)` which you can follow to open the app.
